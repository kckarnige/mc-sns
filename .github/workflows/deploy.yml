# Simple workflow for deploying static content to GitHub Pages
name: Setup webpage

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete. (No we don't)
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Pages
        uses: actions/configure-pages@v5            

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup "latest" stuff
        run: node ./getLatestVersion.js

      - name: Setup web stuff
        uses: Amadevus/pwsh-script@v2
        with:
          script: |
            del ./versions/latest/*.mrpack -Recurse -Force
            copy ./web-files/** ./ -Recurse
            del ./web-files -Recurse -Force
            del ./getLatestVersion.js -Recurse -Force
            $latestVNum = Get-Content ./versions/latest/vnum.txt
            (Get-Content ./index.html).Replace('LATEST_PACK_VERSION', $latestVNum) | Set-Content ./index.html

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload entire repository
          path: '.'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4